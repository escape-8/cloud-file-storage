version: '3.9'

services:
    nginx:
        image: nginx:latest
        volumes:
            - ./:/var/www/html
            - ./docker/dev/nginx/conf.d/:/etc/nginx/conf.d/
        ports:
            - "9993:80"
        container_name: nginx-dev
        restart: unless-stopped
        depends_on:
            - app-dev
        networks:
            - dev-network

    app-dev:
        build:
            args:
                user: ${USER}
                uid: '1000'
            context: .
            dockerfile: docker/dev/app/php-dev.Dockerfile
        working_dir: /var/www/html
        environment:
            PHP_IDE_CONFIG: "serverName=Xdebug"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        volumes:
            - ./:/var/www/html
            - ./docker/dev/app/php-dev.ini:/usr/local/etc/php/conf.d/php.ini
        container_name: app-dev
        depends_on:
            - db-dev
        networks:
            - dev-network

    db-dev:
        image: mariadb:latest
        restart: always
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./docker/dev/db/data:/var/lib/mysql
            - ./docker/dev/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        container_name: db-dev
        ports:
            - "3306:3306"
        networks:
            - dev-network

    s3:
        image: minio/minio:latest
        volumes:
            - ./docker/dev/minio/data:/minio/data
        ports:
            - '9992:9992'
            - '9991:9991'
        environment:
            - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
            - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
        container_name: s3
        command: server --address ":9992" --console-address ":9991" /minio/data
        networks:
            - dev-network

    redis-session:
        image: redis:alpine
        restart: unless-stopped
        ports:
            - '6379:6379'
        container_name: redis-session
        networks:
            - dev-network

    npm:
        image: node:current-alpine
        volumes:
            - ./:/var/www/html
        ports:
            - "3000:3000"
            - "3001:3001"
            - "5173:5173"
        working_dir: /var/www/html
        entrypoint: [ 'npm' ]
        container_name: npm-dev
        networks:
            - dev-network

    composer:
        build:
            context: .
            dockerfile: docker/dev/app/php-dev.Dockerfile
            args:
                user: ${USER}
                uid: '1000'
        volumes:
            - ./:/var/www/html
        depends_on:
            - app-dev
        entrypoint: [ 'composer', '--ignore-platform-reqs' ]
        container_name: composer-dev
        networks:
            - dev-network

    artisan:
        build:
            context: .
            dockerfile: docker/dev/app/php-dev.Dockerfile
            args:
                user: ${USER}
                uid: '1000'
        volumes:
            - ./:/var/www/html
        depends_on:
            - db-dev
        entrypoint: [ 'php', '/var/www/html/artisan' ]
        container_name: artisan-dev
        networks:
            - dev-network

networks:
    dev-network:
        driver: bridge
